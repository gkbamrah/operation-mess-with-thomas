[{"/Users/guramrit/Projects/operation-fuck-with-thomas/src/index.js":"1","/Users/guramrit/Projects/operation-fuck-with-thomas/src/App.js":"2","/Users/guramrit/Projects/operation-fuck-with-thomas/src/reportWebVitals.js":"3","/Users/guramrit/Projects/operation-fuck-with-thomas/src/components/Cipher.js":"4"},{"size":535,"mtime":1676362576607,"results":"5","hashOfConfig":"6"},{"size":175,"mtime":1676362314405,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1676356629959,"results":"8","hashOfConfig":"6"},{"size":1820,"mtime":1676364253670,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hqkrob",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"/Users/guramrit/Projects/operation-fuck-with-thomas/src/index.js",[],[],"/Users/guramrit/Projects/operation-fuck-with-thomas/src/App.js",[],[],"/Users/guramrit/Projects/operation-fuck-with-thomas/src/reportWebVitals.js",[],[],"/Users/guramrit/Projects/operation-fuck-with-thomas/src/components/Cipher.js",["23","24","25"],[],"import { useState } from \"react\";\nimport \"./Cipher.css\";\nimport Decoder from \"../images/decoder.png\";\nimport Meme from \"../images/meme.png\";\nimport Meme2 from \"../images/meme2.png\";\n\nconst Cipher = (props) => {\n  console.log(\"Fucking cheater\");\n  const [correct, setCorrect] = useState(false);\n  const [submitted, setSubmitted] = useState(false);\n  const [secretButtonClicked, setSecretButtonClicked] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const acceptedValues = new Set([\n      \"swiggityswooty\",\n      \"swiggity swooty\",\n      \"swiggity-swooty\",\n    ]);\n    let submittedVal = e.target[0].value;\n    setSubmitted(true);\n    if (acceptedValues.has(submittedVal.toLowerCase())) {\n      setCorrect(true);\n    } else {\n      setCorrect(false);\n    }\n  };\n\n  const handleOnClick = () => {\n    setSecretButtonClicked(true);\n  };\n\n  return (\n    <div className=\"cipher-container\">\n      {correct ? (\n        <div className=\"correct-container\">\n          <div className=\"meme-container\">\n            <img src={Meme} />\n            <img src={Meme2} />\n          </div>\n          <p>Send Elektra the result of the cipher</p>\n        </div>\n      ) : (\n        <>\n          <h1>43 52 24 22 22 24 44 54 43 52 34 34 44 54</h1>\n          <form onSubmit={handleSubmit}>\n            <p>\n              {submitted && !correct\n                ? \"Stop being a hoe\"\n                : \"Press enter on your keyboard to submit\"}\n            </p>\n            <input type=\"text\" />\n          </form>\n          <button\n            className=\"secret-button\"\n            tabIndex={-1}\n            onClick={handleOnClick}\n          >\n            secret button!\n          </button>\n          {secretButtonClicked ? <img src={Decoder} /> : null}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Cipher;\n",{"ruleId":"26","severity":1,"message":"27","line":38,"column":13,"nodeType":"28","endLine":38,"endColumn":31},{"ruleId":"26","severity":1,"message":"27","line":39,"column":13,"nodeType":"28","endLine":39,"endColumn":32},{"ruleId":"26","severity":1,"message":"27","line":61,"column":34,"nodeType":"28","endLine":61,"endColumn":55},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]