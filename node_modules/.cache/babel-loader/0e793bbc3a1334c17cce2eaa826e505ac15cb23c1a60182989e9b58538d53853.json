{"ast":null,"code":"var _jsxFileName = \"/Users/guramrit/Projects/operation-fuck-with-thomas/cipher-boi/src/components/Cipher.js\",\n  _s2 = $RefreshSig$();\nimport { useState } from \"react\";\nimport \"./Cipher.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cipher = props => {\n  _s2();\n  var _s = $RefreshSig$();\n  console.log(\"Fucking cheater\");\n  const [correct, setCorrect] = useState(false);\n  const handleSubmit = e => {\n    _s();\n    e.preventDefault();\n    const acceptedValues = new Set([\"swiggityswooty\", \"swiggity swooty\", \"swiggity-swooty\"]);\n    let submittedVal = e.target[0].value;\n    if (acceptedValues.has(submittedVal.toLowerCase())) {\n      console.log(\"got here\");\n      useState(true);\n    }\n  };\n  _s(handleSubmit, \"6J2wAdZ2kjF0faG/fj33ZXGxstA=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cipher-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"43 52 24 22 22 24 44 54 43 52 34 34 44 54\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press enter on your keyboard to submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s2(Cipher, \"+rgYsxXXiTn5G2yxIPncjd+wrN4=\");\n_c = Cipher;\nexport default Cipher;\nvar _c;\n$RefreshReg$(_c, \"Cipher\");","map":{"version":3,"names":["useState","Cipher","props","console","log","correct","setCorrect","handleSubmit","e","preventDefault","acceptedValues","Set","submittedVal","target","value","has","toLowerCase"],"sources":["/Users/guramrit/Projects/operation-fuck-with-thomas/cipher-boi/src/components/Cipher.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./Cipher.css\";\n\nconst Cipher = (props) => {\n  console.log(\"Fucking cheater\");\n  const [correct, setCorrect] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const acceptedValues = new Set([\"swiggityswooty\", \"swiggity swooty\", \"swiggity-swooty\"])\n    let submittedVal = e.target[0].value;\n    if(acceptedValues.has(submittedVal.toLowerCase())) {\n        console.log(\"got here\")\n        useState(true)\n    }\n  };\n  return (\n    <div className=\"cipher-container\">\n      <h1>43 52 24 22 22 24 44 54 43 52 34 34 44 54</h1>\n      <form onSubmit={handleSubmit}>\n        <p>Press enter on your keyboard to submit</p>\n        <input type=\"text\" />\n        {/* <input type=\"submit\"/> */}\n      </form>\n    </div>\n  );\n};\n\nexport default Cipher;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,cAAc;AAAC;AAEtB,MAAMC,MAAM,GAAIC,KAAK,IAAK;EAAA;EAAA;EACxBC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAAA;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMC,cAAc,GAAG,IAAIC,GAAG,CAAC,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,CAAC,CAAC;IACxF,IAAIC,YAAY,GAAGJ,CAAC,CAACK,MAAM,CAAC,CAAC,CAAC,CAACC,KAAK;IACpC,IAAGJ,cAAc,CAACK,GAAG,CAACH,YAAY,CAACI,WAAW,EAAE,CAAC,EAAE;MAC/Cb,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBJ,QAAQ,CAAC,IAAI,CAAC;IAClB;EACF,CAAC;EAAC,GARIO,YAAY;EASlB,oBACE;IAAK,SAAS,EAAC,kBAAkB;IAAA,wBAC/B;MAAA,UAAI;IAAyC;MAAA;MAAA;MAAA;IAAA,QAAK,eAClD;MAAM,QAAQ,EAAEA,YAAa;MAAA,wBAC3B;QAAA,UAAG;MAAsC;QAAA;QAAA;QAAA;MAAA,QAAI,eAC7C;QAAO,IAAI,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEhB;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,IAvBIN,MAAM;AAAA,KAANA,MAAM;AAyBZ,eAAeA,MAAM;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}